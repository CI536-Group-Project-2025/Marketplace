openapi: 3.1.0
info:
  title: Marketplace
  description: This API allows posting, fetching, and purchasing of products from an authenticated user.
  version: 0.0.1
paths:
  /item/{id}:
    get:
      tags: ["item", "html"]
      operationId: get_item_page
      summary: Get an item's page
      description: Retrieves the individual item HTML page for a given item ID.
      parameters:
      - name: id
        description: The unique ID of the item.
        in: path
        schema:
          type: integer
          minimum: 0
      responses:
        "200":
          description: Item ID exists, returns the HTML page for the given item
          content: 
            - "text/html":
                - "schema":
                  - "$ref": "#/components/schemas/ItemModel"
        "404":
          description: "Item ID does not exist. Returns 404 page."
  /signup:
    get:
      tags: ["user", "html"]
      operationId: get_sign_up_page
      summary: Get the sign up page
      description: Retrieves the HTML for the sign up page
      responses:
        "200":
          description: All good. There shouldn't be any reason for this request to fail.
          content: "text/html"
    put:
      tags: ["user"]
      operationId: user_sign_up
      summary: User sign up attempt
      description: Attempts to sign up the user with their provided details. Should return 200 even if the user already exists, to avoid a potential side-channel attack where an attacker can determine if an email is associated with an account. There is a possible timing attack from returning quickly if the user exists, so that needs to be taken into account.
      parameters:
        - name: email
          description: The user's email that they want to sign up with
          in: query
          schema:
            type: string
            format: email
          
          name: user_name
          description: The user name the user would like to have
          in: query
          schema:
            type: string
            maxLength: 20

          name: pass_hash
          description: The user's hashed password
          schema:
            type: string
            minLength: 8 # This is the minimum length for the *un-hashed* password, which will never be seen by the server but needs to be documented.
      responses:
        "201":
          description: Either the user was signed up properly, or the email already exists in the system.
          content: "application/json"
        "409":
          description: A user already exists with the provided user_name, and so the user could not be signed up.



components:
  schemas:
    ItemModel:
      description: Item information used to build out the Item page template
      type: object
      required:
        - name
        - description
        - id
        - price_pennies # Item price in pennies (to avoid floating point precision errors) 
        - seller_reviews # Average seller reviews
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: integer
          minimum: 0
        price_pennies:
          type: integer
          minimum: 20
        seller_reviews:
          type: number
          format: float
      example:
        name: Small Spoon
        description: Small spoon ideal for stiring your tea with. Good condition, slightly scuffed.
        id: 374395
        price_pennies: 379
        seller_reviews: 4.7
tags:
  - name: "item"
  - description: "Item operations"

  - name: "html"
  - description: "Operations that return HTML"

  - name: "user"
  - description: "Operations that act with users"
